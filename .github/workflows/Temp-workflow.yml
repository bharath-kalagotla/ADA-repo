name: ADA Workflow
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  accessibility:
    runs-on: ubuntu-latest
    env:
      PORT: 4000
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: beta
          id: setup-chrome
          run: |
            echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
            chrome --version
      - name: Test Accessibility
        id: run-ada-tests
        run: |
          sleep 10
          npm run accessibility-test | tee pa11y_output.txt
      - name: Read pa11y_output file
        id: pa11y_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pa11y_output.txt
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            '<details><summary>Pa11y testing results</summary>
            ```${{ steps.pa11y_output.outputs.content }}```
            </details>'
      - name: Check for pa11y failures.
        if: contains(steps.pa11y_output.outputs.content, 'errno 2')
        run: |
          echo "::error::The site is failing accessibility tests. Please review the comment in the pull request or the pa11y-ci step in the workflow for details."
          exit 1
  deploy:
    needs: accessibility
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
